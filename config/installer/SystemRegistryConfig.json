{
  "location": "$ABS_PATH\\installer",
  "components": [
    {
      "name": "Installer",
      "files": [],
      "actions": [
        {
          "source": "Installer.exe",
          "destination": "$ABS_PATH\\Installer.exe",
          "action": "copy"
        },
        {
          "source": "Uninstall.cmd",
          "destination": "$ABS_PATH\\Uninstall.cmd",
          "action": "copy"
        },
        {
          "source": "cleanup.ps1",
          "destination": "$ABS_PATH\\cleanup.ps1",
          "action": "copy"
        }
      ]
    },
    {
      "name": "Certificates-Central",
      "files": [],
      "actions": [
        {
          "action": "requestCertificates",
          "source": "$APIM_SERVICE_URL/crypto/client-certificates",
          "destination": "..\\AdditionalFiles\\certs",
          "cloud_tenant_id": "$CLOUD_TENANT_ID",
          "cc_tenant_id": "$CC_TENANT_ID",
          "cloud_client_id": "$CLOUD_CLIENT_ID",
          "cloud_client_secret": "$CLOUD_CLIENT_SECRET",
          "central_host_name": "$CENTRAL_HOST_NAME"
        },
        {
          "source": "..\\AdditionalFiles\\certs\\ca.pem",
          "destination": "$ABS_PATH\\certificates\\central-certs\\ca.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\ca.pem",
          "destination": "$ABS_PATH\\certificates\\local-certs\\ca.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\central-rabbitmq.cert.pem",
          "destination": "$ABS_PATH\\certificates\\local-certs\\rabbitmq.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\central-rabbitmq.key.pem",
          "destination": "$ABS_PATH\\certificates\\local-keys\\rabbitmq.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\ca.pem",
          "destination": "$ABS_PATH\\certificates\\cloud-certs\\ca.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\cloud-rabbitmq.cert.pem",
          "destination": "$ABS_PATH\\certificates\\cloud-certs\\rabbitmq.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "..\\AdditionalFiles\\certs\\cloud-rabbitmq.key.pem",
          "destination": "$ABS_PATH\\certificates\\cloud-keys\\rabbitmq.pem",
          "action": "copy",
          "skipValidation": true
        },
        {
          "source": "certutil.exe -addstore root \"$ABS_PATH\\certificates\\local-certs\\ca.pem\"",
          "action": "execute"
        }
      ]
    },
    {
      "name": "Docker",
      "files": [
        {
          "type": "file",
          "source": "https://download.docker.com/win/static/stable/x86_64/docker-24.0.4.zip",
          "destination": "docker.zip"
        },
        {
          "type": "file",
          "source": "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-windows-x86_64.exe",
          "destination": "docker-compose.exe"
        },
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/compose/installer/docker-compose.root.yml",
          "destination": "docker-compose.root.yml"
        },
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/compose/installer/environment.env",
          "destination": "environment.env"
        }
      ],
      "actions": [
        {
          "source": "wmic service | findstr /I /R \"dockerd.exe.*Running\" && net stop dockerd",
          "action": "executeImmediate"
        },
        {
          "source": "tar -xf docker.zip -C c:\\",
          "action": "executeImmediate"
        },
        {
          "source": "docker-compose.exe",
          "destination": "c:\\docker\\docker-compose.exe",
          "action": "copy"
        },
        {
          "source": "wmic service | findstr /I /R \"dockerd.exe\" || c:\\docker\\dockerd --service-name dockerd --register-service",
          "action": "executeImmediate"
        },
        {
          "source": "wmic service | findstr /I /R \"dockerd.exe.*Stopped\" && net start dockerd",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"c:\\docker\\docker stop $(c:\\docker\\docker ps -a -q)\" 2>&1",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"c:\\docker\\docker rm $(c:\\docker\\docker ps -a -q)\" 2>&1",
          "action": "executeImmediate"
        },
        {
          "source": "c:\\docker",
          "action": "updatePath"
        },
        {
          "source": "docker-compose.root.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.root.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.root.yml",
          "action": "replaceParameters"
        },
        {
          "source": "environment.env",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\environment.env",
          "action": "replaceParameters"
        }
      ]
    },
    {
      "name": "Certificates-Site",
      "files": [],
      "actions": [
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/certificates/cloud-keys')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/certificates/cloud-certs')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/certificates/central-keys')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/certificates/central-certs')",
          "action": "executeImmediate"
        },
        {
          "source": "..\\AdditionalFiles\\certs\\ca.pem",
          "destination": "$ABS_PATH\\certificates\\central-certs\\ca.pem",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\certs\\ca.pem",
          "destination": "$ABS_PATH\\certificates\\local-certs\\ca.pem",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\certs\\vessel-rabbitmq.cert.pem",
          "destination": "$ABS_PATH\\certificates\\local-certs\\rabbitmq.pem",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\certs\\vessel-rabbitmq.key.pem",
          "destination": "$ABS_PATH\\certificates\\local-keys\\rabbitmq.pem",
          "action": "copy"
        },
        {
          "source": "certutil.exe -addstore root \"$ABS_PATH\\certificates\\local-certs\\ca.pem\"",
          "action": "execute"
        }
      ]
    },
    {
      "name": "RabbitMq",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-platform/releases/download/$RABBIT_RELEASE_TAG/",
          "destination": "c:/abs/temp/RabbitMq/"
        }
      ],
      "actions": [
        {
          "source": "rabbitmqnano.tar",
          "action": "install"
        },
        {
          "source": "$RABBIT_LOCATION.cc-rabbitmq.conf",
          "destination": "$ABS_PATH\\config\\rabbitmqnano\\cc-rabbitmq.conf",
          "action": "copy"
        },
        {
          "source": "docker-compose.rabbitmqnano.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.rabbitmqnano.yml",
          "action": "copy"
        },
        {
          "source": "$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.rabbitmqnano.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "action": "postRabbitMqInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.rabbitmqnano.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Vector",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-platform/releases/download/$VECTOR_RELEASE_TAG/",
          "destination": "c:/abs/temp/Vector/"
        }
      ],
      "actions": [
        {
          "source": "vector.tar",
          "action": "install"
        },
        {
          "source": "vessel-vector.toml",
          "destination": "$ABS_PATH\\config\\vector\\vessel-vector.toml",
          "action": "copy"
        },
        {
          "source": "remap-vessel-logs.vrl",
          "destination": "$ABS_PATH\\config\\vector\\remap-vessel-logs.vrl",
          "action": "copy"
        },
        {
          "source": "central-vector.toml",
          "destination": "$ABS_PATH\\config\\vector\\central-vector.toml",
          "action": "copy"
        },
        {
          "source": "remap-central-logs.vrl",
          "destination": "$ABS_PATH\\config\\vector\\remap-central-logs.vrl",
          "action": "copy"
        },
        {
          "source": "docker-compose.vector.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.vector.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.vector.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\vector\\vessel-vector.toml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\vector\\central-vector.toml",
          "action": "replaceParameters"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/logs')",
          "action": "execute"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\vector\\$RABBIT_LOCATION-vector.toml",
          "action": "postVectorInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.vector.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Drex-Message",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-drex/releases/download/$DREX_MESSAGE_RELEASE_TAG/",
          "destination": "c:/abs/temp/Drex-Message/"
        }
      ],
      "actions": [
        {
          "source": "drex-message.tar",
          "action": "install"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-shared/adapters')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex/history')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/ssh-keys')",
          "action": "executeImmediate"
        },
        {
          "source": "docker-compose.drex-message.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-message.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.drex-message.yml",
          "action": "replaceParameters"
        },
        {
          "source": "appsettings.json",
          "destination": "$ABS_PATH\\config\\drex\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\drex\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postDrexInstall"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$FDZ_ROOT_PATH')",
          "action": "execute"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-message.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Drex-File",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-drex/releases/download/$DREX_FILE_RELEASE_TAG/",
          "destination": "c:/abs/temp/Drex-File/"
        }
      ],
      "actions": [
        {
          "source": "drex-file.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.drex-file.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-file.yml",
          "action": "copy"
        },
        {
          "source": "$RABBIT_LOCATION.appsettings.json",
          "destination": "$ABS_PATH\\config\\drex-f\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\drex-f\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-shared/adapters')",
          "action": "executeImmediate"
        },
        {
          "source": "drex-f.adapter.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\drex-f.adapter.drex.config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.drex-file.yml",
          "action": "replaceParameters"
        },
        {
          "source": "..\\AdditionalFiles\\ssh-host-key-fingerprint.txt",
          "destination": "$ABS_PATH\\ssh-keys\\ssh-host-key-fingerprint.txt",
          "action": "copy"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$FDZ_ROOT_PATH')",
          "action": "execute"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-file.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Disco",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-disco/releases/download/$DISCO_RELEASE_TAG/",
          "destination": "c:/abs/temp/Disco/"
        }
      ],
      "actions": [
        {
          "source": "disco.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.disco.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.disco.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.disco.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postDiscoInstall"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/vendor-configs')",
          "action": "execute"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/client-configs')",
          "action": "execute"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.disco.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Siemens",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-adapters-siemens/releases/download/$SIEMENS_RELEASE_TAG/",
          "destination": "c:/abs/temp/Siemens/"
        }
      ],
      "actions": [
        {
          "source": "siemens.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.siemens.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.siemens.yml",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\siemens-config.json",
          "destination": "$ABS_PATH\\config\\vendor-configs\\siemens-config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.siemens.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postSiemensInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.siemens.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Kdi",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-adapters-kdi/releases/download/$KDI_RELEASE_TAG/",
          "destination": "c:/abs/temp/Kdi/"
        }
      ],
      "actions": [
        {
          "source": "netsh advfirewall firewall add rule name=\"Open MQTT\" dir=in action=allow protocol=TCP localport=1883",
          "action": "executeImmediate"
        },
        {
          "source": "kdi.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.kdi.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.kdi.yml",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\kdi-config.json",
          "destination": "$ABS_PATH\\config\\vendor-configs\\kdi-config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.kdi.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postKdiInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.kdi.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Sftp-Service",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-platform/releases/download/$SFTP_SERVICE_RELEASE_TAG/",
          "destination": "c:/abs/temp/Sftp-Service/"
        }
      ],
      "actions": [
        {
          "source": "sftp-service.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.sftp-service.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.sftp-service.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.sftp-service.yml",
          "action": "replaceParameters"
        },
        {
          "source": "..\\AdditionalFiles\\sftp-service-config.json",
          "destination": "$ABS_PATH\\config\\sftp-service\\config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\sftp-service\\config.json",
          "action": "replaceParameters"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$SFTP_SERVICE_PATH')",
          "action": "execute"
        },
        {
          "source": "..\\AdditionalFiles\\ssh_host_rsa_key",
          "destination": "$ABS_PATH\\ssh-keys\\ssh_host_rsa_key",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\sftp-service\\config.json",
          "schema": "$ABS_PATH\\installer\\sftp-service\\config.schema.json",
          "action": "validateJson"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.sftp-service.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Observability-Service",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-platform/releases/download/$OBSERVABILITY_SERVICE_RELEASE_TAG/",
          "destination": "c:/abs/temp/Observability-Service/"
        }
      ],
      "actions": [
        {
          "source": "observability-service.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.observability-service.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.observability-service.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.observability-service.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.observability-service.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Drex-Central-Message",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-drex/releases/download/$DREX_CENTRAL_MESSAGE_RELEASE_TAG/",
          "destination": "c:/abs/temp/Drex-Central-Message/"
        }
      ],
      "actions": [
        {
          "source": "drex-central-message.tar",
          "action": "install"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-shared/adapters')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-central/vessels')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-central/history')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"New-NetFirewallRule -DisplayName 'open rmq port' -Direction Inbound -LocalPort 15671 -Protocol TCP -Action allow\"",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"New-NetFirewallRule -DisplayName 'open rmq port' -Direction Inbound -LocalPort 5671 -Protocol TCP -Action allow\"",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"New-NetFirewallRule -DisplayName 'open rmq port' -Direction Inbound -LocalPort 5672 -Protocol TCP -Action allow\"",
          "action": "executeImmediate"
        },
        {
          "source": "docker-compose.drex-central.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-central.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.drex-central.yml",
          "action": "replaceParameters"
        },
        {
          "source": "appsettings.json",
          "destination": "$ABS_PATH\\config\\drex-central\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\drex-central\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postDrexCentralInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-central.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Voyage-Manager-Report-Adapter",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-cloud-voyage-manager-adapter/releases/download/$VOYAGE_MANAGER_REPORT_ADAPTER_RELEASE_TAG/",
          "destination": "c:/abs/temp/Voyage-Manager-Report-Adapter/"
        }
      ],
      "actions": [
        {
          "source": "voyage-manager-report-adapter.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.voyage-manager-report-adapter.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.voyage-manager-report-adapter.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.voyage-manager-report-adapter.yml",
          "action": "replaceParameters"
        },
        {
          "source": "appsettings.json",
          "destination": "$ABS_PATH\\config\\voyage-manager-report-adapter\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "voyage-manager.adapter.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\voyage-manager.adapter.drex.config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\voyage-manager-report-adapter\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postVMReportInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.voyage-manager-report-adapter.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Message-Scheduler",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-scheduler/releases/download/$MESSAGE_SCHEDULER_RELEASE_TAG/",
          "destination": "c:/abs/temp/Message-Scheduler/"
        }
      ],
      "actions": [
        {
          "source": "message-scheduler.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.message-scheduler.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.message-scheduler.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.message-scheduler.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$RABBIT_LOCATION.appsettings.json",
          "destination": "$ABS_PATH\\config\\message-scheduler\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "message-scheduler.adapter.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\message-scheduler.adapter.drex.config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\message-scheduler\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config\\rabbitmqnano\\definitions\\$RABBIT_LOCATION\\$RABBIT_LOCATION.definitions.json",
          "destination": "$ABS_PATH\\config\\environment.env",
          "action": "postMessageSchedulerInstall"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.message-scheduler.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "File-Transfer-Scheduler",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-scheduler/releases/download/$FILE_TRANSFER_SCHEDULER_RELEASE_TAG/",
          "destination": "c:/abs/temp/File-Transfer-Scheduler/"
        }
      ],
      "actions": [
        {
          "source": "file-transfer-scheduler.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.file-transfer-scheduler.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.file-transfer-scheduler.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.file-transfer-scheduler.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$RABBIT_LOCATION.appsettings.json",
          "destination": "$ABS_PATH\\config\\file-transfer-scheduler\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "file-transfer-scheduler.adapter.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\file-transfer-scheduler.adapter.drex.config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\file-transfer-scheduler\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.file-transfer-scheduler.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Drex-Notification-Adapter",
      "files": [
        {
          "type": "release",
          "source": "https://github.com/abs-wavesight/cc-drex-notification-adapter/releases/download/$DREX_NOTIFICATION_ADAPTER_RELEASE_TAG/",
          "destination": "c:/abs/temp/Drex-Notification-Adapter/"
        }
      ],
      "actions": [
        {
          "source": "drex-notification-adapter.tar",
          "action": "install"
        },
        {
          "source": "docker-compose.drex-notification-adapter.yml",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-notification-adapter.yml",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\docker-compose.drex-notification-adapter.yml",
          "action": "replaceParameters"
        },
        {
          "source": "$RABBIT_LOCATION.appsettings.json",
          "destination": "$ABS_PATH\\config\\drex-notification-adapter\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config\\drex-notification-adapter\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/config/drex-shared/adapters')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/cc-logs')",
          "action": "executeImmediate"
        },
        {
          "source": "drex-notification.adapter.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\drex-notification.adapter.drex.config.json",
          "action": "copy"
        },
        {
          "source": "..\\AdditionalFiles\\ssh-host-key-fingerprint.txt",
          "destination": "$ABS_PATH\\ssh-keys\\ssh-host-key-fingerprint.txt",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\config",
          "destination": "$ABS_PATH\\config\\docker-compose.drex-notification-adapter.yml",
          "action": "runDockerCompose"
        }
      ]
    },
    {
      "name": "Check-Observability-Prerequisites",
      "files": [
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/prerequisites/observability-service-vessel.txt",
          "destination": "c:/abs/installer/Check-Observability-Prerequisites/observability-service-vessel.txt"
        },
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/prerequisites/observability-service-central.txt",
          "destination": "c:/abs/installer/Check-Observability-Prerequisites/observability-service-central.txt"
        }
      ],
      "actions": [
        {
          "source": "$ABS_PATH\\installer\\Check-Observability-Prerequisites\\observability-service-$RABBIT_LOCATION.txt",
          "action": "checkPrerequisites"
        }
      ]
    },
    {
      "name": "Drex-System-Monitor",
      "files": [
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/config/drex-system-monitor/vessel.monitor.drex.config.json",
          "destination": "c:/abs/installer/Drex-System-Monitor/vessel.monitor.drex.config.json"
        },
        {
          "type": "file",
          "source": "https://raw.githubusercontent.com/abs-wavesight/cc-platform/main/config/drex-system-monitor/vessel.appsettings.json",
          "destination": "c:/abs/installer/Drex-System-Monitor/vessel.appsettings.json"
        },
        {
          "type": "file",
          "source": "https://github.com/abs-wavesight/cc-drex-system-monitor/releases/download/$DREX_SYSTEM_MONITOR_RELEASE_TAG/publish.zip",
          "destination": "c:/abs/installer/Drex-System-Monitor/publish.zip"
        }
      ],
      "actions": [
        {
          "source": "$ABS_PATH\\installer\\Drex-System-Monitor\\publish.zip",
          "destination": "$ABS_PATH\\drex-system-monitor\\",
          "action": "uncompress"
        },
        {
          "source": "$ABS_PATH\\installer\\Drex-System-Monitor\\$RABBIT_LOCATION.monitor.drex.config.json",
          "destination": "$ABS_PATH\\config\\drex-shared\\adapters\\monitor.drex.config.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\installer\\Drex-System-Monitor\\$RABBIT_LOCATION.appsettings.json",
          "destination": "$ABS_PATH\\drex-system-monitor\\config\\appsettings.json",
          "action": "copy"
        },
        {
          "source": "$ABS_PATH\\drex-system-monitor\\config\\appsettings.json",
          "action": "replaceParameters"
        },
        {
          "source": "powershell -Command \"sc.exe create ResourceMonitor binPath= \"$ABS_PATH/drex-system-monitor/Abs.CommonCore.SystemMonitorAdapter.exe\" start= auto\" 2>&1",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command [System.IO.Directory]::CreateDirectory('$ABS_PATH/ResourceMonitoring/logs')",
          "action": "executeImmediate"
        },
        {
          "source": "powershell -Command \"sc.exe start \"ResourceMonitor\"\" 2>&1",
          "action": "execute"
        },
        {
          "source": "powershell -Command \"$ABS_PATH\\drex-system-monitor\\script\\writeAppMetadataToRegistry.ps1 -TargetFile \"$ABS_PATH\\drex-system-monitor\\Abs.CommonCore.SystemMonitorAdapter.exe\" -ProductName \"SystemMonitorAdapter\"\" 2>&1",
          "action": "execute"
        }
      ]
    }
  ]
}