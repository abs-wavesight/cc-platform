name: Central System Nano Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        description: Unique version for the release
      description:
        required: false
        type: string
        description: Description of the release
      rabbitmq-version:
        required: false
        type: string
        description: Version to use for RabbitMQ release # v100
      vector-central-version:
        required: false
        type: string
        description: Version to use for Vector central release # v100
      sftp-service-version:
        required: false
        type: string
        description: Version to use for Sftp Service release # v100
      vm-report-version:
        required: false
        type: string
        description: Version to use for Voyage Manager Report Adapter release # v100
      drex-central-version:
        required: false
        type: string
        description: Version to use for DREX Central release # v100
      drex-file-version:
        required: false
        type: string
        description: Version to use for Drex File release # v100
      message-scheduler-version:
        required: false
        type: string
        description: Version to use for Message Scheduler release # v100
        

concurrency:
  group: central-system-nano-release-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  get-next-version:
    name: Get Next Version
    if: ${{ inputs.version == '' }}
    uses: abs-wavesight/cc-platform/.github/workflows/shared-define-version.yml@main
    with:
      major: 1
      minor: 0
      project_marker: "system-central"
      release_branch: "releases/1_0_1"
      develop_branch: "main"
      increment: true

  get-default-rabbitmq-version:
    name: Get Default RabbitMQ Nano Version
    if: ${{ inputs.rabbitmq-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-platform"
      name: "RabbitMQNano Release"
    secrets: inherit

  get-default-vector-central-version:
    name: Get Default Vector Central Version
    if: ${{ inputs.vector-central-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-platform"
      name: "Vector Release"
    secrets: inherit

  get-default-sftp-service-version:
    name: Get Default Sftp Service Version
    if: ${{ inputs.sftp-service-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-platform"
      name: "Sftp Service Release"
    secrets: inherit

  get-default-vm-report-adapter-version:
    name: Get Default Voyage Manager Report Adapter Version
    if: ${{ inputs.vm-report-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-cloud-voyage-manager-adapter"
      name: "Voyage Manager Report Adapter Release"
    secrets: inherit

  get-default-drex-central-version:
    name: Get Default DREX Central Version
    if: ${{ inputs.drex-central-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-drex"
      name: "Drex Central Message Release"
    secrets: inherit

  get-default-drex-file-version:
    name: Get Default Drex File Version
    if: ${{ inputs.drex-file-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-drex"
      name: "Drex File Release"
    secrets: inherit

  get-default-message-scheduler-version:
    name: Get Default Message Scheduler Version
    if: ${{ inputs.message-scheduler-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-scheduler"
      name: "Message Scheduler Release"
    secrets: inherit

  release-component:
    name: Central System Release
    needs: 
      - get-default-rabbitmq-version
      - get-default-vector-central-version
      - get-default-sftp-service-version
      - get-default-vm-report-adapter-version
      - get-default-drex-central-version
      - get-default-drex-file-version
      - get-default-message-scheduler-version
      - get-next-version
    uses: ./.github/workflows/release-shared-system.yml
    strategy:
      matrix:
        windows-version: [ "2022" ]
    with:
      version: ${{ inputs.version || needs.get-next-version.outputs.version }}
      description: ${{ inputs.description || 'Central System Nano Release' }}
      tag-prefix: central-system-nano
      windows-version: ${{ matrix.windows-version }}
      system-config: CentralSystemConfig.json
      component-params: >
        -p `$RABBIT_RELEASE_TAG:${{ needs.get-default-rabbitmq-version.outputs.version || inputs.rabbitmq-version }}_rabbitmq
        -p `$VECTOR_RELEASE_TAG:${{ needs.get-default-vector-central-version.outputs.version || inputs.vector-central-version }}_vector
        -p `$SFTP_SERVICE_RELEASE_TAG:${{ needs.get-default-sftp-service-version.outputs.version || inputs.sftp-service-version }}_sftp-service
        -p `$DREX_FILE_RELEASE_TAG:${{ needs.get-default-drex-file-version.outputs.version || inputs.drex-file-version }}_drex-file
        -p `$VOYAGE_MANAGER_REPORT_ADAPTER_RELEASE_TAG:${{ needs.get-default-vm-report-adapter-version.outputs.version || inputs.vm-report-version }}_voyage-manager-report-adapter
        -p `$DREX_CENTRAL_MESSAGE_RELEASE_TAG:${{ needs.get-default-drex-central-version.outputs.version || inputs.drex-central-version }}_drex-central-message
        -p `$MESSAGE_SCHEDULER_RELEASE_TAG:${{ needs.get-default-message-scheduler-version.outputs.version || inputs.message-scheduler-version }}_message-scheduler
      release-name-prefix: Central System Nano Release
    secrets: inherit
    if: ${{ !cancelled() && !contains(needs.*.result, 'failure') }} # Needed to ensure the full workflow runs even if dependencies skipped