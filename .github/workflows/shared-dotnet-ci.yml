name: Shared - Dotnet CI

on:
  workflow_call:
    inputs:
      image-name: # cc-drex-service
        required: true
        type: string
      label-description: # ABS Common Core Data Remote EXchange Service (D-REX)
        required: true
        type: string
      docker-context-directory: # service
        required: true
        type: string
        description: Relative to the repository root (e.g., "service")
      solution-directory: # service
        required: true
        type: string
        description: Relative to the repository root (e.g., "service")
      solution-name: # Drex.sln
        required: true
        type: string
        description: Should be found with the `solution-directory` (e.g., "Drex.sln")
      dockerfile-name: # Drex.Dockerfile
        required: true
        type: string
        description: Should be found with the `solution-directory` (e.g., "Drex.Dockerfile")
      run-integration-tests:
        required: false
        type: boolean
        description: Flag allows run or skip integration and e2e tests

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_PACKAGE_PATH: ${{ github.workspace }}/.nuget/packages
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.image-name }}
  DOTNET_IMAGE_TAG_WIN2019: 7.0-nanoserver-1809
  DOTNET_IMAGE_TAG_WIN2022: 7.0-nanoserver-ltsc2022
  POWERSHELL_IMAGE_TAG_WIN2019: lts-7.2-nanoserver-1809
  POWERSHELL_IMAGE_TAG_WIN2022: nanoserver-ltsc2022
  LABEL_PREFIX: org.eagle.wavesight
  IMAGE_DESCRIPTION: ${{ inputs.label-description }}
  COVERAGE_OUTPUT_LOCATION: service/{0}/TestResults/*/coverage.cobertura.xml

defaults:
  run:
    shell: pwsh

jobs:
  dump-context:
    name: Dump Context
    uses: ./.github/workflows/shared-dump-context.yml

  get_clean_branch_names:
    name: Get Clean Branch Names
    uses: ./.github/workflows/shared-get-clean-branch-names.yml

  build:
    name: Build & Run Tests
    uses: ./.github/workflows/shared-dotnet-build.yml
    with:
      solution-directory: service
      solution-name: Drex.sln
      run-integration-tests: ${{ inputs.run-integration-tests }}
    secrets: inherit

