name: Dependency Containers CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'containers/**/*'
      - '.github/workflows/dependency-containers-ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'containers/**/*'
      - '.github/workflows/dependency-containers-ci.yml'

env:
  REGISTRY: ghcr.io
  LABEL_PREFIX: org.eagle.wavesight

concurrency:
  group: dependency-containers-ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  get_clean_branch_names:
    name: Get Clean Branch Names
    uses: ./.github/workflows/shared-get-clean-branch-names.yml

  filter-containers:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      containers: ${{ steps.path-filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Filter container builds using modified file paths
        uses: dorny/paths-filter@v2.11.1
        id: path-filter
        with:
          filters: |
            rabbitmq: 
              - .github/workflows/docker-build-publish.yml
              - containers/rabbitmq/**
            vector: 
              - .github/workflows/docker-build-publish.yml
              - containers/vector/**
            loki:
              - .github/workflows/docker-build-publish.yml
              - containers/loki/**
            grafana: 
              - .github/workflows/docker-build-publish.yml
              - containers/grafana/**

  build-containers:
    needs: [ filter-containers, get_clean_branch_names ]
    if: fromJSON(needs.filter-containers.outputs.containers)[0] != null
    strategy:
      matrix:
        container: ${{ fromJSON(needs.filter-containers.outputs.containers) }}
        os: [ windows-2019, windows-2022 ]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare handle.exe utility for RabbitMQ
        if: matrix.container == 'rabbitmq'
        working-directory: ./
        shell: powershell # Windows Powershell, NOT Powershell Core (https://github.com/MScholtes/PS2EXE/issues/82)
        run: ./containers/rabbitmq/prep-handle-utility.ps1

      - name: Construct tag-friendly shortened git SHA
        run: |
          $tagFriendlySha=$Env:GITHUB_SHA
          $tagFriendlySha=$tagFriendlySha.Substring(0, 7)
          echo "Tag-friendly git SHA: $tagFriendlySha"
          echo "SHORT_SHA=$tagFriendlySha" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build and push Docker image
        id: build-and-push-container		
        uses: mr-smithers-excellent/docker-build-push@v6
        env:
          BRANCH_NAME: ${{ needs.get_clean_branch_names.outputs.tagFriendlyBranchName }}
          BRANCH_NAME_WITH_PREFIX_DASH: ${{ needs.get_clean_branch_names.outputs.tagFriendlyBranchNameWithPrefixDash }}
        with:
          buildArgs: >
            SERVER_VERSION=${{ matrix.os == 'windows-2022' && 'ltsc2022' || 'ltsc2019' }},
            DOTNET_TAG=${{ matrix.os == 'windows-2022' && '7.0-nanoserver-ltsc2022' || '7.0-nanoserver-1809' }},
            POWERSHELL_NANOSERVER_TAG=${{ matrix.os == 'windows-2022' && 'lts-7.2-nanoserver-ltsc2022' || 'lts-7.2-nanoserver-1809' }}
          image: ${{ matrix.container }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          directory: containers/${{ matrix.container }}
          dockerfile: containers/${{ matrix.container }}/Dockerfile
          pushImage: true
          tags: ${{ matrix.os }}${{ env.BRANCH_NAME_WITH_PREFIX_DASH }},${{ matrix.os }}-${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}
          labels: >-
            org.opencontainers.image.description="${{ env.IMAGE_DESCRIPTION }}: ${{ matrix.container }}",
            ${{ env.LABEL_PREFIX }}.github-run-number=${{ github.RUN_NUMBER }},
            ${{ env.LABEL_PREFIX }}.branch=${{ env.BRANCH_NAME }},
            ${{ env.LABEL_PREFIX }}.sha=${{ github.SHA }},
            ${{ env.LABEL_PREFIX }}.container_type=infrastructure
          addTimestamp: true
          platform: windows/amd64          

      - uses: SmartsquareGmbH/delete-old-packages@v0.7.0
        env:
          BRANCH_NAME: ${{ needs.get_clean_branch_names.outputs.tagFriendlyBranchName }}
          BRANCH_NAME_WITH_PREFIX_DASH: ${{ needs.get_clean_branch_names.outputs.tagFriendlyBranchNameWithPrefixDash }}
        if: env.BRANCH_NAME != 'main'
        name: Prune old package versions
        with:
          organization: abs-wavesight
          type: container
          names: ${{ matrix.container }}
          version-pattern: "^${{ matrix.os }}${{ env.BRANCH_NAME_WITH_PREFIX_DASH }}-(?!${{ env.SHORT_SHA }}$).{7}$" # This will match all versions for this branch's package EXCEPT the one we just published
          keep: 0
          dry-run: false