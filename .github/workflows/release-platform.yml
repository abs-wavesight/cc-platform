name: Platform Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: Unique version for the Platform release
      contracts-version:
        required: true
        type: string
        description: Version to use for Contracts release # v100
      site-system-version:
        required: false
        type: string
        description: Version to use for Site system release # v100
      central-system-version: 
        required: false
        type: string
        description: Version to use for Central system release # v100

concurrency:
  group: system-release-${{ github.head_ref }}
  cancel-in-progress: true
  
jobs:
  get-default-site-system-release-version:
    name: Get Default Site System Release Version
    if: ${{ inputs.site-system-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-platform"
      name: "Site System Release"
    secrets: inherit

  get-default-central-system-release-version:
    name: Get Default Central System Release Version
    if: ${{ inputs.central-system-version == '' }}
    uses: ./.github/workflows/shared-get-latest-release-version.yml
    with:
      repo: "cc-platform"
      name: "Central System Release"
    secrets: inherit

  system-release:
    name: System Release
    if: ${{ !cancelled() && !contains(needs.*.result, 'failure') }} # Needed to ensure the full workflow runs even if dependencies skipped
    needs:
        - get-default-central-system-release-version
        - get-default-site-system-release-version
    runs-on: windows-2019
    steps:
      - name: Build Tag
        id: build-tag
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: '${{ inputs.version }}-platform-release'

      - name: Download site system release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ inputs.site-system-version || needs.get-default-site-system-release-version.outputs.version }}-site-system'
          file: '.*'
          regex: true
          target: 'site/'
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}

      - name: Rename site files
        shell: bash
        run: |
            folder="site"
            prefix="SiteSystem_"

            for file in $folder/*; do
                if [ -f "$file" ]; then
                    filename=$(basename "$file")
                    new_filename="${prefix}${filename}"
                    mv "$file" "$folder/$new_filename"
                fi
            done

      - name: Download central system release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ inputs.central-system-version || needs.get-default-central-system-release-version.outputs.version }}-central-system'
          file: '.*'
          regex: true
          target: 'central/'
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}
      
      - name: Rename central files
        shell: bash
        run: |
            folder="central"
            prefix="CentralSystem_"

            for file in $folder/*; do
                if [ -f "$file" ]; then
                    filename=$(basename "$file")
                    new_filename="${prefix}${filename}"
                    mv "$file" "$folder/$new_filename"
                fi
            done

      - name: Download contracts release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ inputs.contracts-version }}-contracts'
          file: '.*'
          regex: true
          target: 'contracts/'
          repo: cc-contracts
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}

      - name: Build release
        uses: ncipollo/release-action@v1
        with:
            allowUpdates: true
            body: "----"
            name: '${{ inputs.version }} Platform Release'
            commit: main
            artifacts: "central/*.*, site/*.*, contracts/*.*"
            tag: ${{ steps.build-tag.outputs.lowercase }}
            repo: cc-releases
            token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}
