name: Deploy Azure Function Apps

on:
  workflow_call:
    inputs:  
      tagVersion:
        description: 'Specifies the tag version of the artifact to download. Use "latest" to download the latest artifact. Default is "latest"'
        required: true
        type: string    
      resource_group_name:
        description: 'Specifies the Azure Resource Group'
        required: true
        type: string   
      artifactFunctions:
        description: 'Specifies the name of the artifact containing builded functions'
        required: true
        type: string      
      artifactConfigName:
        required: true
        type: string
        description: 'Specifies the name of the artifact containing configuration'
      artifactConfigFile:
        required: true
        type: string
        description: 'Specifies the file name in the artifact containing configuration'
      repository:
        required: false
        type: string
        description: 'The source repository path'
        default: ${{ github.repository }}
      subscription_key_from_secret:
        required: true
        type: string
        description: 'The Azure subscription ID'  
      function_name_suffix:
        required: false
        type: string
        description: 'The Azure function app name suffix' 
        default: ''     
    secrets:
      AZURE_CLIENT_ID:
          required: true
      AZURE_AD_CLIENT_SECRET:
          required: true
      AZURE_TENANT_ID:
          required: true    

jobs: 
  deploy:    
    runs-on: ubuntu-latest
    name: Deploy${{ inputs.function_name_suffix }}
    steps:
      - name: Set unique directory names
        id: unique-path
        run: |
          $random = Get-Random -Minimum 10000 -Maximum 99999
          $uniquePathSuffix = "$(Get-Date -Format "yyyyMMddHHmmss")-$random"          
          echo "::set-output name=uniquePathSuffix::$uniquePathSuffix"
          Write-Host "TMP folder $uniquePathSuffix"
        shell: pwsh

      - name: Download config from local Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifactConfigName }}
          path: ${{ github.workspace }}/downloaded-artifacts-conf-${{ steps.unique-path.outputs.uniquePathSuffix }}
      
      - name: List files in target folder
        run: ls -l ${{ github.workspace }}/downloaded-artifacts-conf-${{ steps.unique-path.outputs.uniquePathSuffix}}   

      - name: Download functions from Release Artifacts (Specific Tag)
        uses: robinraju/release-downloader@v1.9
        if: inputs.tagVersion != 'latest'
        with:
          repository: ${{ inputs.repository }}
          fileName: ${{ inputs.artifactFunctions }}.zip
          tag: ${{ inputs.tagVersion }}
          out-file-path: ${{ github.workspace }}/downloaded-artifacts-func-${{ steps.unique-path.outputs.uniquePathSuffix }} 
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Download functions from Release Artifacts (Latest)
        uses: robinraju/release-downloader@v1.9
        if: inputs.tagVersion == 'latest'
        with:
          repository: ${{ inputs.repository }}
          fileName: ${{ inputs.artifactFunctions }}.zip
          latest: true
          out-file-path: ${{ github.workspace }}/downloaded-artifacts-func-${{ steps.unique-path.outputs.uniquePathSuffix }} 
          token: ${{ secrets.GH_TOKEN }}          

      - name: Manual expand archive files
        shell: pwsh
        run: |
            $destinationPath = "${{ github.workspace }}/downloaded-artifacts-func-${{ steps.unique-path.outputs.uniquePathSuffix }}/functions"
            $zipFilePath = "${{ github.workspace }}/downloaded-artifacts-func-${{ steps.unique-path.outputs.uniquePathSuffix }}/${{ inputs.artifactFunctions }}.zip"        
            Expand-Archive -Path $zipFilePath -DestinationPath $destinationPath         

      - name: Login via Azure CLI
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets[inputs.subscription_key_from_secret]}}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'      

      - name: Azure Function App Zip Deploy
        shell: bash
        run: |         
          artifactPath="${{ github.workspace }}/downloaded-artifacts-conf-${{ steps.unique-path.outputs.uniquePathSuffix }}/${{inputs.artifactConfigFile }}"
          functionConfigs=$(jq -c '.[]' <"$artifactPath")

          for config in $functionConfigs; do
            use=$(echo $config | jq -r '.Use')
            if [ "$use" = "true" ]; then
              functionName=$(echo "$config" | jq -r '.AZURE_FUNCTIONAPP_NAME') 
              function_name_suffix=${{ inputs.function_name_suffix }}
              
              if [ -n "${{ inputs.function_name_suffix }}" ]; then
                functionName="${functionName}-${function_name_suffix}"
              fi
                         
              artifactName=$(echo $config | jq -r '.Name')
              zipFilePath="${{ github.workspace }}/downloaded-artifacts-func-${{ steps.unique-path.outputs.uniquePathSuffix }}/functions/${artifactName}.zip"
              echo "Deploy ${artifactName}"
              echo "Run ${{ inputs.resource_group_name }} ${functionName}  ${zipFilePath}"
              az functionapp deployment source config-zip -g ${{ inputs.resource_group_name }} -n $functionName --src $zipFilePath
            fi
          done  
