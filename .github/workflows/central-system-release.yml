name: Central System Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: Unique version for the release
      description:
        required: true
        type: string
        description: Description of the release
      windows-version:
        required: true
        type: choice
        description: Windows version for the Release
        options:
        - 2019
        - 2022
      rabbitmq-tag:
        required: true
        type: string
        description: Tag to use for RabbitMQ release
      vector-central-tag:
        required: true
        type: string
        description: Tag to use for Vector central release

concurrency:
  group: central-system-release
  cancel-in-progress: true

jobs:
  release-component:
    name: System Release
    runs-on: windows-2019

    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC
          format: 'YYYYMMDDHHmmss'
          
      - name: Build Tag
        id: build-tag
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: central-system-${{ inputs.windows-version }}-${{ inputs.version }}-${{ steps.time.outputs.time }}

      - name: Nuget - Set Nuget credentials
        working-directory: ./
        run: |
          $AbsNugetUsername = "USERNAME"
          echo "ABS_NUGET_USERNAME=$AbsNugetUsername" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          $AbsNugetPassword = "${{ secrets.FETCH_ALL_RELEASES_TOKEN }}"
          echo "ABS_NUGET_PASSWORD=$AbsNugetPassword" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append 

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
                   
      - name: Download installer
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/Installer
          file: Abs.CommonCore.Installer.exe
          target: Installer.exe
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}                   
      
      - name: Download installer registry config
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/Installer
          file: SystemRegistryConfig.json
          target: SystemRegistryConfig.json
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}
          
      - name: Download installer download config
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/Installer
          file: CentralSystemConfig.json
          target: SystemConfig.json
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}                          
          
      - name: Download components       
        run: |
          .\Installer.exe download -r SystemRegistryConfig.json -d SystemConfig.json -p `$WINDOWS_VERSION:${{ inputs.windows-version }} -p `$RABBIT_RELEASE_TAG:${{ inputs.rabbitmq-tag }} -p `$VECTOR_CENTRAL_RELEASE_TAG:${{ inputs.vector-central-tag }}

      - name: Process Components   
        run: |
          .\Installer.exe unchunk -s c:/abs/temp/`$component -d c:/abs/temp/`$component/Release.zip -c SystemConfig.json
          .\Installer.exe uncompress -s c:/abs/temp/`$component/Release.zip -d c:/abs/installer -c SystemConfig.json

      - name: Compress contents
        run: |
          .\Installer.exe compress -s c:/abs/installer -d Release.zip
          
      - name: Chunk contents
        run: |
          .\Installer.exe chunk -s Release.zip -d .\ --size (1 * 1024 * 1024 * 1024) -rs
         
      - name: Build release body
        run: |
          .\Installer.exe release-body -o release_body.txt -p "`$DESCRIPTION:${{ inputs.description }}" -p `$WINDOWS_VERSION:${{ inputs.windows-version }} -p `$RABBIT_RELEASE_TAG:${{ inputs.rabbitmq-tag }} -p `$VECTOR_CENTRAL_RELEASE_TAG:${{ inputs.vector-central-tag }}

      - name: Build release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: release_body.txt
          name: Central System Release ${{ inputs.windows-version }} ${{ inputs.version }}
          tag: ${{ steps.build-tag.outputs.lowercase }}
          commit: main
          artifacts: "Release.zip*,Installer.exe,SystemRegistryConfig.json,SystemConfig.json"