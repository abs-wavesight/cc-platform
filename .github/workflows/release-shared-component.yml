name: Shared - Component Release

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
        description: Name of the release    
      component_name:
        required: true
        type: string
        description: Name of the component to release      
      tag:
        required: true
        type: string
        description: Unique tag for the release
      description:
        required: true
        type: string
        description: Description of the release
      component-params: # -p ... -p ...
        required: true
        type: string
        description: Full parameter list for component
      windows-version:
        required: true
        type: string
        description: Windows version for the Release

jobs:
  release-component:
    name: Component Release
    runs-on: windows-${{ inputs.windows-version }}
    
    steps:          
      - name: Build Tag
        id: build-tag
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ inputs.tag }}
          
      - name: Nuget - Set Nuget credentials
        working-directory: ./
        run: |
          $AbsNugetUsername = "USERNAME"
          echo "ABS_NUGET_USERNAME=$AbsNugetUsername" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          $AbsNugetPassword = "${{ secrets.FETCH_ALL_RELEASES_TOKEN }}"
          echo "ABS_NUGET_PASSWORD=$AbsNugetPassword" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append 

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
                   
      - name: Download installer
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'abs-wavesight/cc-platform'
          version: tags/Installer
          file: Abs.CommonCore.Installer.exe
          target: Installer.exe
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}   
      
      - name: Download installer config
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'abs-wavesight/cc-platform'
          version: tags/Installer
          file: ComponentRegistryConfig.json
          target: ComponentRegistryConfig.json
          token: ${{ secrets.FETCH_ALL_RELEASES_TOKEN }}
          
      - name: Download components       
        run: |
          .\Installer.exe download -np -r ComponentRegistryConfig.json -c ${{ inputs.component_name }} -p `$DOWNLOAD_PATH:c:/abs -p `$WINDOWS_VERSION:${{ inputs.windows-version }} ${{ inputs.component-params }}
          .\Installer.exe install -np -r ComponentRegistryConfig.json -c ${{ inputs.component_name }} -p `$DOWNLOAD_PATH:c:/abs -p `$WINDOWS_VERSION:${{ inputs.windows-version }} ${{ inputs.component-params }}

      - name: Compress contents
        run: |
          .\Installer.exe compress -s c:/abs/installer -d ${{ inputs.windows-version }}.zip
          
      - name: Chunk contents
        run: |
          .\Installer.exe chunk -s ${{ inputs.windows-version }}.zip -d .\ --size (1 * 1024 * 1024 * 1024) -rs         
      
      - name: Build release body
        run: |
          .\Installer.exe release-body -o readme.txt -p "`$DESCRIPTION:${{ inputs.description }}" -p `$DOWNLOAD_PATH:c:/abs ${{ inputs.component-params }}
      
      - name: Build release
        uses: ncipollo/release-action@v1
        with:          
          allowUpdates: true
          omitBody: true
          omitBodyDuringUpdate: true
          body: "Release"
          name: ${{ inputs.name }}
          tag: ${{ steps.build-tag.outputs.lowercase }}
          commit: main
          artifacts: "readme.txt, ${{ inputs.windows-version }}.zip*"